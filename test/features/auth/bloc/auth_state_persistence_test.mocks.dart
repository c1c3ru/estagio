// Mocks generated by Mockito 5.4.6 from annotations
// in gestao_de_estagio/test/features/auth/bloc/auth_state_persistence_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:gestao_de_estagio/data/datasources/local/preferences_manager.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PreferencesManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockPreferencesManager extends _i1.Mock
    implements _i2.PreferencesManager {
  MockPreferencesManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveUserToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #saveUserToken,
          [token],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeUserToken() => (super.noSuchMethod(
        Invocation.method(
          #removeUserToken,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveUserData(Map<String, dynamic>? userData) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserData,
          [userData],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeUserData() => (super.noSuchMethod(
        Invocation.method(
          #removeUserData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveThemeMode(String? themeMode) => (super.noSuchMethod(
        Invocation.method(
          #saveThemeMode,
          [themeMode],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setFirstLaunch(bool? isFirstLaunch) => (super.noSuchMethod(
        Invocation.method(
          #setFirstLaunch,
          [isFirstLaunch],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  bool isFirstLaunch() => (super.noSuchMethod(
        Invocation.method(
          #isFirstLaunch,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<void> saveOnlineColleagues(
          List<Map<String, dynamic>>? colleagues) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveOnlineColleagues,
          [colleagues],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveTimeLogsHistory(List<Map<String, dynamic>>? timeLogs) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTimeLogsHistory,
          [timeLogs],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveActiveContracts(List<Map<String, dynamic>>? contracts) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveActiveContracts,
          [contracts],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveSupervisedStudents(
          List<Map<String, dynamic>>? students) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSupervisedStudents,
          [students],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> savePendingTimeLogs(List<Map<String, dynamic>>? timeLogs) =>
      (super.noSuchMethod(
        Invocation.method(
          #savePendingTimeLogs,
          [timeLogs],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveContractStatistics(Map<String, dynamic>? statistics) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveContractStatistics,
          [statistics],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveNotificationSettings(Map<String, dynamic>? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveNotificationSettings,
          [settings],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveSyncSettings(Map<String, dynamic>? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSyncSettings,
          [settings],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveFormData(
    String? formKey,
    Map<String, dynamic>? formData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFormData,
          [
            formKey,
            formData,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  Map<String, dynamic>? getFormData(String? formKey) =>
      (super.noSuchMethod(Invocation.method(
        #getFormData,
        [formKey],
      )) as Map<String, dynamic>?);

  @override
  _i3.Future<void> removeFormData(String? formKey) => (super.noSuchMethod(
        Invocation.method(
          #removeFormData,
          [formKey],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearStudentData() => (super.noSuchMethod(
        Invocation.method(
          #clearStudentData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearSupervisorData() => (super.noSuchMethod(
        Invocation.method(
          #clearSupervisorData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearFormData() => (super.noSuchMethod(
        Invocation.method(
          #clearFormData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearAll() => (super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
