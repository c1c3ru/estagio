// Mocks generated by Mockito 5.4.5 from annotations
// in gestao_de_estagio/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_modular/flutter_modular.dart' as _i4;
import 'package:gestao_de_estagio/core/guards/auth_guard.dart' as _i2;
import 'package:gestao_de_estagio/domain/entities/user_entity.dart' as _i6;
import 'package:gestao_de_estagio/domain/usecases/auth/get_auth_state_changes_usecase.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthGuard].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthGuard extends _i1.Mock implements _i2.AuthGuard {
  MockAuthGuard() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> canActivate(
    String? path,
    _i4.ModularRoute? route,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #canActivate,
          [
            path,
            route,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.FutureOr<_i4.ModularRoute?> pre(_i4.ModularRoute? route) =>
      (super.noSuchMethod(Invocation.method(
        #pre,
        [route],
      )) as _i3.FutureOr<_i4.ModularRoute?>);

  @override
  _i3.FutureOr<_i4.ParallelRoute<dynamic>?> pos(
    _i4.ModularRoute? route,
    _i4.ModularArguments? data,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #pos,
        [
          route,
          data,
        ],
      )) as _i3.FutureOr<_i4.ParallelRoute<dynamic>?>);
}

/// A class which mocks [GetAuthStateChangesUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAuthStateChangesUsecase extends _i1.Mock
    implements _i5.GetAuthStateChangesUsecase {
  MockGetAuthStateChangesUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i6.UserEntity?> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i3.Stream<_i6.UserEntity?>.empty(),
      ) as _i3.Stream<_i6.UserEntity?>);
}
